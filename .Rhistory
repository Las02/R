rnorm(n = 1,mean = 5,sd = 2^2)
rep(2, rnorm(n = 1,mean = 5,sd = 2^2))
rep(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(2, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(25, rnorm(n = 1,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, rnorm(n = 25,mean = 5,sd = 2^2))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(1, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
rep
rep[rep > 4.5]
rep[rep > 4.5]
rep[rep > 4.5]
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
rep[rep > 4.5]
nrow(rep[rep > 4.5])
nrow(rep[rep > 4.5])
ncol(rep[rep > 4.5])
length(rep[rep > 4.5])
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5])
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(1000000, mean(rnorm(n = 25,mean = 5,sd = 2^2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
rep <- replicate(10000, mean(rnorm(n = 25,mean = 5,sd = 2)))
length(rep[rep > 4.5]) / length(rep)
25 * 2^2
1/25^2 *  25 * 2^2
sqrt(0.16)
pnorm(25, 0.4)
pnorm(25, 0.4)
pnorm(4.5, 25, 0.4)
pnorm(4.5, 25, 0.4)
pnorm(4.5, 25, 0.4)
pnorm(4.5, 25, 0.4)
pnorm(4.5, 25, 0.4)
pnorm(4.5, mean = 25, sd  = 0.4)
1-pnorm(4.5, mean = 25, sd  = 0.4)
pnorm(4.5, mean = 25, sd  = 0.4)
pnorm(4.5, mean = 25, sd  = 0.4)
25^2 * 2^2
2500 * 1/25^2
pnorm(4.5, mean = 25, sd  = 4)
1-pnorm(4.5, mean = 25, sd  = 4)
1/25^2
4*1/25^2
25*4*1/25^2
0.16
4/25
sqrt(0.16)
4/25
2/sqrt(25)
pnorm(4.5, mean = 25, sd  = 0.4)
5*25
125/25
pnorm(4.5, mean = 5, sd  = 0.4)
1-pnorm(4.5, mean = 5, sd  = 0.4)
n <- 1000
plot.ecdf(rnorm(n))
plot.ecdf(qnorm(runif(n)), add=TRUE)
qqplot(rnorm(n), qnorm(runif(n)))
qqline(rnorm(n), qnorm(runif(n)))
## Warning in if (datax) {: the condition has length > 1 and only the first element
will be used
par(mfrow=c(1,2))
hist(rnorm(n), main="rnorm(n)")
hist(qnorm(runif(n)), main='qnorm(runif(n))')
plot.ecdf(rnorm(n))
n <- 1000
plot.ecdf(rnorm(n))
plot.ecdf(qnorm(runif(n)), add=TRUE)
plot.ecdf(qnorm(runif(n)), add=TRUE)
plot.ecdf(qnorm(runif(n)), add=TRUE)
plot.ecdf(qnorm(runif(n)))
plot.ecdf(qnorm(runif(n)))
plot.ecdf(qnorm(runif(n)))
plot.ecdf(qnorm(runif(n)))
plot.ecdf(qnorm(runif(n)))
hist(qnorm(runif(n)), main='qnorm(runif(n))')
hist(qnorm(runif(n)), main='qnorm(runif(n))')
qnorm(runif(n))
bar(qnorm(runif(n)))
hist(qnorm(runif(n)))
2.76 min/40 customers
2.76*60
2.76/60
60/2.76
60/0.897
p <- 92/950
n <- 950
n*p(1-p)
n*p*(1-p)
n*p(1-p)
sqrt(n*p*(1-p))
p <- 92/950
sqrt(n*p*(1-p))
p*(1-p)/n
sqrt(p*(1-p)/n)
4*8
1+33+49
1+33+49+9
7+45+69
79*650/1600
78*650/1600
sqrt(1)
dpois(1,1/7)
dpois(1,7)
dpois(1,7)
dpois(1,7)
dpois(1,1)
dpois(1,1)
dpois(1,1)
dpois(1/7,1)
dpois(1/7,1)
ppois(1/7,1)
ppois(1,1/7)
dpois(1,1/7)
pois(1 , lambda = 1/7)
dpois(1 , lambda = 1/7)
1-dpois(1 , lambda = 1/7)
1-ppois(1 , lambda = 1/7)
ppois(0 , lambda = 1/7)
1-pf(4.3,4,6-5)
1-pf(4.3,4,6*5-5)
A <- 1.19/2
D <- 4.53/9
A/D
k = 3
9 = n-3
12
12/3
1465/179
1.20e-01*1465/179
74.54*3
-60.45*3
74.54*1.5
-60.45*1.5
74.54*1.5
74.54*1.5
74.54-60.45
74.54+60.45
74.54+60.45
74.54+60.45*1.5
n <- 8
mean <- 109.4
sd <- 6.2
qt_scale <- qt(0.975, n-1) * sd/sqrt(n)
mean + c(-1,1)*qt_scale
n <- 8
mean <- 109.4
sd <- 6.2
qt_scale <- qt(0.975, n-1) * sd/sqrt(n)
mean + c(-1,1)*qt_scale
8-1
x <- "113.3 117.9 111.9 109.6 109.6 111.5 97.8 103.3"
x <- as.numeric(strsplit(x, " ")[[1]])
y <- "110.7 108.3 110.6 106.7 109.7 107.5 105.9 111.0 99.9 110.2 99.4 103.6"
y <- as.numeric(strsplit(x, " ")[[1]])
t.test(x,y)
x <- "113.3 117.9 111.9 109.6 109.6 111.5 97.8 103.3"
x <- as.numeric(strsplit(x, " ")[[1]])
y <- "110.7 108.3 110.6 106.7 109.7 107.5 105.9 111.0 99.9 110.2 99.4 103.6"
y <- as.numeric(strsplit(x, " ")[[1]])
t.test(x,y)
y
x
y <- as.numeric(strsplit(x, " ")[[1]])
y
x
x
y <- "110.7 108.3 110.6 106.7 109.7 107.5 105.9 111.0 99.9 110.2 99.4 103.6"
y <- as.numeric(strsplit(x, " ")[[1]])
x <- "113.3 117.9 111.9 109.6 109.6 111.5 97.8 103.3"
x <- as.numeric(strsplit(x, " ")[[1]])
y <- "110.7 108.3 110.6 106.7 109.7 107.5 105.9 111.0 99.9 110.2 99.4 103.6"
y <- as.numeric(strsplit(y, " ")[[1]])
t.test(x,y)
y
x
t.test(x,y)
x <- "113.3 117.9 111.9 109.6 109.6 111.5 97.8 103.3"
x <- as.numeric(strsplit(x, " ")[[1]])
y <- "110.7 108.3 110.6 106.7 109.7 107.5 105.9 111.0 99.9 110.2 99.4 103.6"
y <- as.numeric(strsplit(y, " ")[[1]])
t.test(x,y)
y
x
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2, 4.1)  # SD
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]^2/ns[1]+vs[2]^2/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
# Test statistic
tobs <- (ms[1]-ms[2])/sqrt(vs[1]/ns[1]+vs[2]/ns[2])
tobs
ms=c(109.4, 107.0)
vs=c(6.2^2, 4.1^2)
ns=c(8, 12)
tobs <- tobs <- (ms[1]-ms[2])/sqrt(vs[1]/ns[1]+vs[2]/ns[2])
tobs
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=12.21, sig.level = 0.01, type="one.sample")
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=12.21, sig.level = 0.01, type="one.sample")
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=12.21, sig.level = 0.99, type="one.sample")
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=5, sig.level = 0.01, type="one.sample")
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=5, sig.level = 0.99, type="one.sample")
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=5, sig.level = 0.01, type="one.sample")
type="one.sample"
#power: 80% chance for at accep den hvis den er true
# a = sig.level
# delta, den diffrence i mean vi vil kunne se forskell på. Relevant fordi vi kigger på difference
# Den her er mere accurate da den bruge t-dist
power.t.test(power=0.8, delta=4, sd=5, sig.level = 0.01)
p <- 25*0.8
p
p <- 0.8
25*p*0.2
2^2*2
2^2*25
2^2*25 + 2^2 * 4
4*25*25+4*4*4*1/9
sqrt(2507.11)
2*rnorm(1,10,sqrt(4))^2)
2*rnorm(1,10,sqrt(4))^2)
2*rnorm(1,10,sqrt(4))^2)
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
2*rnorm(1,10,sqrt(4))^2
replicate(1000,2*rnorm(1,10,sqrt(4))^2)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
sd(x)
sd(x)
sd(x)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(1000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,10,sqrt(4))^2)
sd(x)
4*25*25
sqrt(2500)
4*25*(25)^2
sqrt(62500)
4*25*25
sqrt(2500)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2 + (1/3)*rnorm(1,10,sqrt(4))^3)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
4*25*25
sqrt(2500)
4*25*25^2
sqrt(62500)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
x <- replicate(10000,2*rnorm(1,20,sqrt(25))^2)
sd(x)
